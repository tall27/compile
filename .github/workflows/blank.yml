name: Build oqs-provider v0.7

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        
      - name: Download oqs-provider 0.7.0 source zip
        run: |
          curl -L -o oqs-provider-0.7.0.zip https://github.com/open-quantum-safe/oqs-provider/archive/refs/tags/0.7.0.zip
          unzip oqs-provider-0.7.0.zip
          mv oqs-provider-0.7.0 oqs-provider

      - name: Set up dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libssl-dev

      - name: Set up dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake openssl

      - name: Set up dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: Configure and build (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          cd oqs-provider
          mkdir build
          cd build
          cmake ..
          make -j$(nproc || sysctl -n hw.logicalcpu)

      - name: Configure and build (Windows)
        if: runner.os == 'Windows'
        run: |
          cd oqs-provider
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64
          cmake --build . --config Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oqs-provider-binaries-${{ matrix.os }}
          path: oqs-provider/build/
