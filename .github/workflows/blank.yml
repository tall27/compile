name: Build oqs-provider v0.7.0

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Checkout your own repo (optional, if you want to archive artifacts here)
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Clone oqs-provider v0.7.0
        run: |
          git clone --branch v0.7.0 --depth 1 https://github.com/open-quantum-safe/oqs-provider.git

      - name: Set up dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libssl-dev

      - name: Set up dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake openssl

      - name: Set up dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: Configure (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mkdir oqs-provider/build
          cd oqs-provider/build
          cmake ..

      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir oqs-provider/build
          cd oqs-provider/build
          cmake .. -G "Visual Studio 17 2022" -A x64

      - name: Build (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          cd oqs-provider/build
          make -j$(nproc)

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          cd oqs-provider/build
          cmake --build . --config Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oqs-provider-binaries-${{ matrix.os }}
          path: |
            oqs-provider/build/
